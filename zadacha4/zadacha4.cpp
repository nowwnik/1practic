#include <iostream>
#include <ctime>
using namespace std;

#define max 100
//ограничение на размер массива

//объявление дополнительных функций
float  sum(int n, float array[]);
float  sum0(int n, float array[]);
void mas_new(int n, float array[]);
void mas(int type, int n, float array[]);
void debug(int type, int n);

int main()
{
	setlocale(LC_ALL, "Russian");
	//подключение русского языка

	float array[max];
	//инициализация массива

	int n, type;
	//объявление переменных
	//n - размер массива от пользователя
	//type - тип задания массива
	
	cout << "Программа, работающая с одномерным массивом\n";
	//пояснение пользователю

	cout << "Каким образом вы хотите задать массив?\n"
	<< "1 - случайный массив, 2 - набор с клавиатуры\n";

	cin >> type;

	cout << "Массив какой длины вы хотите задать?\n";
	cin >> n;
	//запрос данных

	debug(type, n);
	//проверка корректности данных

	mas(type, n, array);
	//заполнение массива

	cout << "сумма элементов с нечётными номерами: "
	<< sum(n, array) << endl; //вызов функции суммы нечётных элементов

	cout << "сумма элементов массива, расположенных между первым и последним отрицательными элементами: "
	<< sum0(n, array) << endl; //вызов функции промежуточных элементов

	cout << "сжатый массив; удалены элементы, модуль которых не превышает 1: ";
	mas_new(n, array);//вызов функции сжатия массива
	
}

//функция вычисления суммы нечётных элементов
float  sum(int n, float array[])
{
	float  sum = 0; //инициализация переменной для хранения суммы
	for (int i = 0; i < n; i++)
	{
		if (i % 2 != 0)		//вычисление суммы нечётных элементов
			sum += array[i];
	}
	return sum;
}

//вычисление суммы между отрицательными элементами
float  sum0(int n, float array[])
{
	float summ = 0;//инициализация переменной для хранения суммы
	int j = 0;// номер последнего отрицательного элемента
	int i = 0;// номер первого отрицательного элемента

	for (int k = 0; k < n; k++) {
		if (array[k] < 0) 
		{
			j = k;		//поиск краевых отрицательных элементов
			if (i == 0)
				i = k;
		}
	}

	for (int k = i + 1; k < j; k++)
		summ += array[k]; //сумма между элементами

	return summ;
}

//сжатие массива
void mas_new(int n, float array[])
{
	int j = 0;	//итератор
	float arra[max];//массив для перезаписи

	for (int i = 0; i < n; i++)
	{
		arra[j] = array[i]; //запись в новый массив

		if (abs(array[i]) >= 1)
			j++;//счёт кол-ва элементов
	}

	for (int i = j; i < n; i++)
		arra[i] = 0; //замена концевых элементов нулями

	//печать массива
	for (int i = 0; i < n; i++)
		cout << arra[i] << " ";
}

//заполнение массива
void mas(int type, int n, float array[])
{
	if (type == 1) //способ случайного заполнения
	{
		srand(time(NULL));//обечспечение рандома
		//заполнение массива
		for (int i = 0; i < n; i++)
			array[i] = rand() % 200 - 100; 
		//печать массива		
		for (int i = 0; i < n; i++)
			cout << array[i] << " "; 

		cout << "\n";
	}

	else if (type == 2)//способ ввода с клавиатуры
	{
		cout << endl;
		//заполнение массива с клавиатуры
		for (int i = 0; i < n; i++)
			cin >> array[i];

		cout << "\n";
	}

}

//проверка данных
void debug(int type, int n)
{
	//проверка кооректности выбора метода и длины массива
	if (type > 2 or type < 1 or n < 1)
	{
		cout << "НЕКОРРЕКТНЫЙ ВВОД";
		exit(0);
	}
	if (n > max)
	{
		cout << "превышен максимальный размер массива";
		exit(0);
	}
}
